// Code generated by ent, DO NOT EDIT.

package cycleredeemcode

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/mohaijiang/computeshare-server/internal/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldLTE(FieldID, id))
}

// FkUserID applies equality check predicate on the "fk_user_id" field. It's identical to FkUserIDEQ.
func FkUserID(v uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldFkUserID, v))
}

// RedeemCode applies equality check predicate on the "redeem_code" field. It's identical to RedeemCodeEQ.
func RedeemCode(v string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldRedeemCode, v))
}

// Cycle applies equality check predicate on the "cycle" field. It's identical to CycleEQ.
func Cycle(v float64) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldCycle, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v bool) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldState, v))
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldCreateTime, v))
}

// UseTime applies equality check predicate on the "use_time" field. It's identical to UseTimeEQ.
func UseTime(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldUseTime, v))
}

// FkUserIDEQ applies the EQ predicate on the "fk_user_id" field.
func FkUserIDEQ(v uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldFkUserID, v))
}

// FkUserIDNEQ applies the NEQ predicate on the "fk_user_id" field.
func FkUserIDNEQ(v uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNEQ(FieldFkUserID, v))
}

// FkUserIDIn applies the In predicate on the "fk_user_id" field.
func FkUserIDIn(vs ...uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldIn(FieldFkUserID, vs...))
}

// FkUserIDNotIn applies the NotIn predicate on the "fk_user_id" field.
func FkUserIDNotIn(vs ...uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNotIn(FieldFkUserID, vs...))
}

// FkUserIDGT applies the GT predicate on the "fk_user_id" field.
func FkUserIDGT(v uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldGT(FieldFkUserID, v))
}

// FkUserIDGTE applies the GTE predicate on the "fk_user_id" field.
func FkUserIDGTE(v uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldGTE(FieldFkUserID, v))
}

// FkUserIDLT applies the LT predicate on the "fk_user_id" field.
func FkUserIDLT(v uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldLT(FieldFkUserID, v))
}

// FkUserIDLTE applies the LTE predicate on the "fk_user_id" field.
func FkUserIDLTE(v uuid.UUID) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldLTE(FieldFkUserID, v))
}

// FkUserIDIsNil applies the IsNil predicate on the "fk_user_id" field.
func FkUserIDIsNil() predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldIsNull(FieldFkUserID))
}

// FkUserIDNotNil applies the NotNil predicate on the "fk_user_id" field.
func FkUserIDNotNil() predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNotNull(FieldFkUserID))
}

// RedeemCodeEQ applies the EQ predicate on the "redeem_code" field.
func RedeemCodeEQ(v string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldRedeemCode, v))
}

// RedeemCodeNEQ applies the NEQ predicate on the "redeem_code" field.
func RedeemCodeNEQ(v string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNEQ(FieldRedeemCode, v))
}

// RedeemCodeIn applies the In predicate on the "redeem_code" field.
func RedeemCodeIn(vs ...string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldIn(FieldRedeemCode, vs...))
}

// RedeemCodeNotIn applies the NotIn predicate on the "redeem_code" field.
func RedeemCodeNotIn(vs ...string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNotIn(FieldRedeemCode, vs...))
}

// RedeemCodeGT applies the GT predicate on the "redeem_code" field.
func RedeemCodeGT(v string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldGT(FieldRedeemCode, v))
}

// RedeemCodeGTE applies the GTE predicate on the "redeem_code" field.
func RedeemCodeGTE(v string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldGTE(FieldRedeemCode, v))
}

// RedeemCodeLT applies the LT predicate on the "redeem_code" field.
func RedeemCodeLT(v string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldLT(FieldRedeemCode, v))
}

// RedeemCodeLTE applies the LTE predicate on the "redeem_code" field.
func RedeemCodeLTE(v string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldLTE(FieldRedeemCode, v))
}

// RedeemCodeContains applies the Contains predicate on the "redeem_code" field.
func RedeemCodeContains(v string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldContains(FieldRedeemCode, v))
}

// RedeemCodeHasPrefix applies the HasPrefix predicate on the "redeem_code" field.
func RedeemCodeHasPrefix(v string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldHasPrefix(FieldRedeemCode, v))
}

// RedeemCodeHasSuffix applies the HasSuffix predicate on the "redeem_code" field.
func RedeemCodeHasSuffix(v string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldHasSuffix(FieldRedeemCode, v))
}

// RedeemCodeEqualFold applies the EqualFold predicate on the "redeem_code" field.
func RedeemCodeEqualFold(v string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEqualFold(FieldRedeemCode, v))
}

// RedeemCodeContainsFold applies the ContainsFold predicate on the "redeem_code" field.
func RedeemCodeContainsFold(v string) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldContainsFold(FieldRedeemCode, v))
}

// CycleEQ applies the EQ predicate on the "cycle" field.
func CycleEQ(v float64) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldCycle, v))
}

// CycleNEQ applies the NEQ predicate on the "cycle" field.
func CycleNEQ(v float64) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNEQ(FieldCycle, v))
}

// CycleIn applies the In predicate on the "cycle" field.
func CycleIn(vs ...float64) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldIn(FieldCycle, vs...))
}

// CycleNotIn applies the NotIn predicate on the "cycle" field.
func CycleNotIn(vs ...float64) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNotIn(FieldCycle, vs...))
}

// CycleGT applies the GT predicate on the "cycle" field.
func CycleGT(v float64) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldGT(FieldCycle, v))
}

// CycleGTE applies the GTE predicate on the "cycle" field.
func CycleGTE(v float64) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldGTE(FieldCycle, v))
}

// CycleLT applies the LT predicate on the "cycle" field.
func CycleLT(v float64) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldLT(FieldCycle, v))
}

// CycleLTE applies the LTE predicate on the "cycle" field.
func CycleLTE(v float64) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldLTE(FieldCycle, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v bool) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v bool) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNEQ(FieldState, v))
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldCreateTime, v))
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNEQ(FieldCreateTime, v))
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldIn(FieldCreateTime, vs...))
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNotIn(FieldCreateTime, vs...))
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldGT(FieldCreateTime, v))
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldGTE(FieldCreateTime, v))
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldLT(FieldCreateTime, v))
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldLTE(FieldCreateTime, v))
}

// UseTimeEQ applies the EQ predicate on the "use_time" field.
func UseTimeEQ(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldEQ(FieldUseTime, v))
}

// UseTimeNEQ applies the NEQ predicate on the "use_time" field.
func UseTimeNEQ(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNEQ(FieldUseTime, v))
}

// UseTimeIn applies the In predicate on the "use_time" field.
func UseTimeIn(vs ...time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldIn(FieldUseTime, vs...))
}

// UseTimeNotIn applies the NotIn predicate on the "use_time" field.
func UseTimeNotIn(vs ...time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNotIn(FieldUseTime, vs...))
}

// UseTimeGT applies the GT predicate on the "use_time" field.
func UseTimeGT(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldGT(FieldUseTime, v))
}

// UseTimeGTE applies the GTE predicate on the "use_time" field.
func UseTimeGTE(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldGTE(FieldUseTime, v))
}

// UseTimeLT applies the LT predicate on the "use_time" field.
func UseTimeLT(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldLT(FieldUseTime, v))
}

// UseTimeLTE applies the LTE predicate on the "use_time" field.
func UseTimeLTE(v time.Time) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldLTE(FieldUseTime, v))
}

// UseTimeIsNil applies the IsNil predicate on the "use_time" field.
func UseTimeIsNil() predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldIsNull(FieldUseTime))
}

// UseTimeNotNil applies the NotNil predicate on the "use_time" field.
func UseTimeNotNil() predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(sql.FieldNotNull(FieldUseTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CycleRedeemCode) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CycleRedeemCode) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CycleRedeemCode) predicate.CycleRedeemCode {
	return predicate.CycleRedeemCode(func(s *sql.Selector) {
		p(s.Not())
	})
}
