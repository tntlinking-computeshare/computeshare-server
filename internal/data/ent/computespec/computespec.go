// Code generated by ent, DO NOT EDIT.

package computespec

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the computespec type in the database.
	Label = "compute_spec"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCore holds the string denoting the core field in the database.
	FieldCore = "core"
	// FieldMemory holds the string denoting the memory field in the database.
	FieldMemory = "memory"
	// Table holds the table name of the computespec in the database.
	Table = "compute_specs"
)

// Columns holds all SQL columns for computespec fields.
var Columns = []string{
	FieldID,
	FieldCore,
	FieldMemory,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the ComputeSpec queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCore orders the results by the core field.
func ByCore(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCore, opts...).ToFunc()
}

// ByMemory orders the results by the memory field.
func ByMemory(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMemory, opts...).ToFunc()
}
