// Code generated by ent, DO NOT EDIT.

package userresourcelimit

import (
	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the userresourcelimit type in the database.
	Label = "user_resource_limit"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFkUserID holds the string denoting the fk_user_id field in the database.
	FieldFkUserID = "fk_user_id"
	// FieldMaxCPU holds the string denoting the max_cpu field in the database.
	FieldMaxCPU = "max_cpu"
	// FieldMaxMemory holds the string denoting the max_memory field in the database.
	FieldMaxMemory = "max_memory"
	// FieldMaxNetworkMapping holds the string denoting the max_network_mapping field in the database.
	FieldMaxNetworkMapping = "max_network_mapping"
	// Table holds the table name of the userresourcelimit in the database.
	Table = "user_resource_limits"
)

// Columns holds all SQL columns for userresourcelimit fields.
var Columns = []string{
	FieldID,
	FieldFkUserID,
	FieldMaxCPU,
	FieldMaxMemory,
	FieldMaxNetworkMapping,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultFkUserID holds the default value on creation for the "fk_user_id" field.
	DefaultFkUserID func() uuid.UUID
	// DefaultMaxCPU holds the default value on creation for the "max_cpu" field.
	DefaultMaxCPU int32
	// DefaultMaxMemory holds the default value on creation for the "max_memory" field.
	DefaultMaxMemory int32
	// DefaultMaxNetworkMapping holds the default value on creation for the "max_network_mapping" field.
	DefaultMaxNetworkMapping int32
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the UserResourceLimit queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByFkUserID orders the results by the fk_user_id field.
func ByFkUserID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFkUserID, opts...).ToFunc()
}

// ByMaxCPU orders the results by the max_cpu field.
func ByMaxCPU(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMaxCPU, opts...).ToFunc()
}

// ByMaxMemory orders the results by the max_memory field.
func ByMaxMemory(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMaxMemory, opts...).ToFunc()
}

// ByMaxNetworkMapping orders the results by the max_network_mapping field.
func ByMaxNetworkMapping(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMaxNetworkMapping, opts...).ToFunc()
}
