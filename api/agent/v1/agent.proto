syntax = "proto3";

package api.server.agent.v1;

import "google/api/annotations.proto";
import "api/compute/v1/compute_instance.proto";
//import "openapi/v3/annotations.proto";

option go_package = "github.com/mohaijiang/computeshare-server/api/agent/v1;v1";
option java_multiple_files = true;
option java_package = "api.agent.v1";

service Agent {
	rpc CreateAgent (CreateAgentRequest) returns (CreateAgentReply){
		option (google.api.http) = {
			post: "/v1/agent",
			body: "*"
		};
	};
	rpc UpdateAgent (UpdateAgentRequest) returns (UpdateAgentReply) {
		option (google.api.http) = {
			put: "/v1/agent/{id}",
			body: "*"
		};
	};
	rpc DeleteAgent (DeleteAgentRequest) returns (DeleteAgentReply) {
		option (google.api.http) = {
			delete: "/v1/agent/{id}"
		};
	};
	rpc GetAgent (GetAgentRequest) returns (GetAgentReply) {
		option (google.api.http) = {
			get: "/v1/agent/{id}"
		};
	};
	rpc ListAgent (ListAgentRequest) returns (ListAgentReply) {
		option (google.api.http) = {
			get: "/v1/agent"
		};
	};
	rpc ListAgentInstance(ListAgentInstanceReq) returns(api.server.compute.v1.ListInstanceReply){
		option (google.api.http) = {
			get: "/v1/agent/instance/{agentId}"
		};
	}

	rpc ReportInstanceStatus(api.server.compute.v1.Instance) returns (ReportInstanceStatusReply){
		option (google.api.http) = {
			put: "/v1/agent/instance/report"
			body: "*"
		};
	}
}

message CreateAgentRequest {
	string mac = 1;
	string hostname = 2;
	int32 totalCpu = 3;
	int32 totalMemory = 4;
	int32 occupiedCpu = 5;
	int32 occupiedMemory = 6;
	string ip = 7;
}
message CreateAgentReply {
	message Data {
		string id = 1;
	}
	int32 code = 1;
	string message = 2;
	Data data = 3;
}

message UpdateAgentRequest {
	string mac = 1;
	string hostname = 2;
	int32 totalCpu = 3;
	int32 totalMemory = 4;
	int32 occupiedCpu = 5;
	int32 occupiedMemory = 6;
	string ip = 7;
	string id = 8;
}
message UpdateAgentReply {
	int32 code = 1;
	string message = 2;
}

message DeleteAgentRequest {
	string id = 1;
}
message DeleteAgentReply {
	int32 code = 1;
	string message = 2;
}

message GetAgentRequest {
	string id = 1;
}
message AgentReply {
	string id = 1;
	string MAC = 2;
}

message GetAgentReply {
	int32 code = 1;
	string message = 2;
	AgentReply data = 3;
}

message ListAgentRequest {
	optional string nameLike = 1;
}
message ListAgentReply {
	int32 code = 1;
	string message = 2;
	repeated GetAgentReply data = 3;
}

message ListAgentInstanceReq {
	string agentId = 1;
}

message ReportInstanceStatusReply {
	int32 code = 1;
	string message = 2;
}
