// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.2
// source: api/network_mapping/v1/network_mapping.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateNetworkMappingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Protocol     string `protobuf:"bytes,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	ComputerId   string `protobuf:"bytes,3,opt,name=computer_id,json=computerId,proto3" json:"computer_id,omitempty"`
	ComputerPort int32  `protobuf:"varint,4,opt,name=computer_port,json=computerPort,proto3" json:"computer_port,omitempty"`
}

func (x *CreateNetworkMappingRequest) Reset() {
	*x = CreateNetworkMappingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNetworkMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkMappingRequest) ProtoMessage() {}

func (x *CreateNetworkMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkMappingRequest.ProtoReflect.Descriptor instead.
func (*CreateNetworkMappingRequest) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNetworkMappingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNetworkMappingRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *CreateNetworkMappingRequest) GetComputerId() string {
	if x != nil {
		return x.ComputerId
	}
	return ""
}

func (x *CreateNetworkMappingRequest) GetComputerPort() int32 {
	if x != nil {
		return x.ComputerPort
	}
	return 0
}

type CreateNetworkMappingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message        string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NetworkMapping *NetworkMappingVO `protobuf:"bytes,3,opt,name=network_mapping,json=networkMapping,proto3" json:"network_mapping,omitempty"`
}

func (x *CreateNetworkMappingReply) Reset() {
	*x = CreateNetworkMappingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNetworkMappingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNetworkMappingReply) ProtoMessage() {}

func (x *CreateNetworkMappingReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNetworkMappingReply.ProtoReflect.Descriptor instead.
func (*CreateNetworkMappingReply) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNetworkMappingReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateNetworkMappingReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateNetworkMappingReply) GetNetworkMapping() *NetworkMappingVO {
	if x != nil {
		return x.NetworkMapping
	}
	return nil
}

type UpdateNetworkMappingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Protocol     string `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	ComputerId   string `protobuf:"bytes,4,opt,name=computer_id,json=computerId,proto3" json:"computer_id,omitempty"`
	ComputerPort int32  `protobuf:"varint,5,opt,name=computer_port,json=computerPort,proto3" json:"computer_port,omitempty"`
}

func (x *UpdateNetworkMappingRequest) Reset() {
	*x = UpdateNetworkMappingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNetworkMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNetworkMappingRequest) ProtoMessage() {}

func (x *UpdateNetworkMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNetworkMappingRequest.ProtoReflect.Descriptor instead.
func (*UpdateNetworkMappingRequest) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateNetworkMappingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNetworkMappingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNetworkMappingRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *UpdateNetworkMappingRequest) GetComputerId() string {
	if x != nil {
		return x.ComputerId
	}
	return ""
}

func (x *UpdateNetworkMappingRequest) GetComputerPort() int32 {
	if x != nil {
		return x.ComputerPort
	}
	return 0
}

type UpdateNetworkMappingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message        string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NetworkMapping *NetworkMappingVO `protobuf:"bytes,3,opt,name=network_mapping,json=networkMapping,proto3" json:"network_mapping,omitempty"`
}

func (x *UpdateNetworkMappingReply) Reset() {
	*x = UpdateNetworkMappingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNetworkMappingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNetworkMappingReply) ProtoMessage() {}

func (x *UpdateNetworkMappingReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNetworkMappingReply.ProtoReflect.Descriptor instead.
func (*UpdateNetworkMappingReply) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateNetworkMappingReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateNetworkMappingReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateNetworkMappingReply) GetNetworkMapping() *NetworkMappingVO {
	if x != nil {
		return x.NetworkMapping
	}
	return nil
}

type DeleteNetworkMappingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteNetworkMappingRequest) Reset() {
	*x = DeleteNetworkMappingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNetworkMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkMappingRequest) ProtoMessage() {}

func (x *DeleteNetworkMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNetworkMappingRequest.ProtoReflect.Descriptor instead.
func (*DeleteNetworkMappingRequest) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteNetworkMappingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteNetworkMappingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteNetworkMappingReply) Reset() {
	*x = DeleteNetworkMappingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNetworkMappingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNetworkMappingReply) ProtoMessage() {}

func (x *DeleteNetworkMappingReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNetworkMappingReply.ProtoReflect.Descriptor instead.
func (*DeleteNetworkMappingReply) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteNetworkMappingReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteNetworkMappingReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetNetworkMappingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetNetworkMappingRequest) Reset() {
	*x = GetNetworkMappingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNetworkMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkMappingRequest) ProtoMessage() {}

func (x *GetNetworkMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkMappingRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkMappingRequest) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{6}
}

func (x *GetNetworkMappingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetNetworkMappingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message        string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NetworkMapping *NetworkMappingVO `protobuf:"bytes,3,opt,name=network_mapping,json=networkMapping,proto3" json:"network_mapping,omitempty"`
}

func (x *GetNetworkMappingReply) Reset() {
	*x = GetNetworkMappingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNetworkMappingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkMappingReply) ProtoMessage() {}

func (x *GetNetworkMappingReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkMappingReply.ProtoReflect.Descriptor instead.
func (*GetNetworkMappingReply) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{7}
}

func (x *GetNetworkMappingReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetNetworkMappingReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetNetworkMappingReply) GetNetworkMapping() *NetworkMappingVO {
	if x != nil {
		return x.NetworkMapping
	}
	return nil
}

type PageNetworkMappingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *PageNetworkMappingRequest) Reset() {
	*x = PageNetworkMappingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageNetworkMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageNetworkMappingRequest) ProtoMessage() {}

func (x *PageNetworkMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageNetworkMappingRequest.ProtoReflect.Descriptor instead.
func (*PageNetworkMappingRequest) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{8}
}

func (x *PageNetworkMappingRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageNetworkMappingRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PageNetworkMappingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *PageNetworkMappingReply_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PageNetworkMappingReply) Reset() {
	*x = PageNetworkMappingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageNetworkMappingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageNetworkMappingReply) ProtoMessage() {}

func (x *PageNetworkMappingReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageNetworkMappingReply.ProtoReflect.Descriptor instead.
func (*PageNetworkMappingReply) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{9}
}

func (x *PageNetworkMappingReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PageNetworkMappingReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PageNetworkMappingReply) GetData() *PageNetworkMappingReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type NetworkMappingVO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GatewayId    string             `protobuf:"bytes,3,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	InstanceId   string             `protobuf:"bytes,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceName string             `protobuf:"bytes,5,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	GatewayPort  int32              `protobuf:"varint,6,opt,name=gateway_port,json=gatewayPort,proto3" json:"gateway_port,omitempty"`
	InstancePort int32              `protobuf:"varint,7,opt,name=instance_port,json=instancePort,proto3" json:"instance_port,omitempty"`
	Status       int32              `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	GatewayIp    string             `protobuf:"bytes,9,opt,name=gateway_ip,json=gatewayIp,proto3" json:"gateway_ip,omitempty"`
	CreatedTime  int64              `protobuf:"varint,10,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	Protocol     string             `protobuf:"bytes,11,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Domains      []*DomainBindingVO `protobuf:"bytes,12,rep,name=domains,proto3" json:"domains,omitempty"`
}

func (x *NetworkMappingVO) Reset() {
	*x = NetworkMappingVO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkMappingVO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkMappingVO) ProtoMessage() {}

func (x *NetworkMappingVO) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkMappingVO.ProtoReflect.Descriptor instead.
func (*NetworkMappingVO) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{10}
}

func (x *NetworkMappingVO) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NetworkMappingVO) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetworkMappingVO) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *NetworkMappingVO) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *NetworkMappingVO) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *NetworkMappingVO) GetGatewayPort() int32 {
	if x != nil {
		return x.GatewayPort
	}
	return 0
}

func (x *NetworkMappingVO) GetInstancePort() int32 {
	if x != nil {
		return x.InstancePort
	}
	return 0
}

func (x *NetworkMappingVO) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NetworkMappingVO) GetGatewayIp() string {
	if x != nil {
		return x.GatewayIp
	}
	return ""
}

func (x *NetworkMappingVO) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *NetworkMappingVO) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *NetworkMappingVO) GetDomains() []*DomainBindingVO {
	if x != nil {
		return x.Domains
	}
	return nil
}

type NextNetworkMappingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComputerId string `protobuf:"bytes,1,opt,name=computer_id,json=computerId,proto3" json:"computer_id,omitempty"`
}

func (x *NextNetworkMappingRequest) Reset() {
	*x = NextNetworkMappingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextNetworkMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextNetworkMappingRequest) ProtoMessage() {}

func (x *NextNetworkMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextNetworkMappingRequest.ProtoReflect.Descriptor instead.
func (*NextNetworkMappingRequest) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{11}
}

func (x *NextNetworkMappingRequest) GetComputerId() string {
	if x != nil {
		return x.ComputerId
	}
	return ""
}

type NextNetworkMappingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *NextNetworkMappingReply_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *NextNetworkMappingReply) Reset() {
	*x = NextNetworkMappingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextNetworkMappingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextNetworkMappingReply) ProtoMessage() {}

func (x *NextNetworkMappingReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextNetworkMappingReply.ProtoReflect.Descriptor instead.
func (*NextNetworkMappingReply) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{12}
}

func (x *NextNetworkMappingReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NextNetworkMappingReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NextNetworkMappingReply) GetData() *NextNetworkMappingReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type PageNetworkMappingReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*NetworkMappingVO `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int32               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page  int32               `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size  int32               `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *PageNetworkMappingReply_Data) Reset() {
	*x = PageNetworkMappingReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageNetworkMappingReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageNetworkMappingReply_Data) ProtoMessage() {}

func (x *PageNetworkMappingReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageNetworkMappingReply_Data.ProtoReflect.Descriptor instead.
func (*PageNetworkMappingReply_Data) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{9, 0}
}

func (x *PageNetworkMappingReply_Data) GetList() []*NetworkMappingVO {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *PageNetworkMappingReply_Data) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageNetworkMappingReply_Data) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageNetworkMappingReply_Data) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type NextNetworkMappingReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicIp   string `protobuf:"bytes,1,opt,name=public_ip,json=publicIp,proto3" json:"public_ip,omitempty"`
	PublicPort int32  `protobuf:"varint,2,opt,name=public_port,json=publicPort,proto3" json:"public_port,omitempty"`
}

func (x *NextNetworkMappingReply_Data) Reset() {
	*x = NextNetworkMappingReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextNetworkMappingReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextNetworkMappingReply_Data) ProtoMessage() {}

func (x *NextNetworkMappingReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_api_network_mapping_v1_network_mapping_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextNetworkMappingReply_Data.ProtoReflect.Descriptor instead.
func (*NextNetworkMappingReply_Data) Descriptor() ([]byte, []int) {
	return file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP(), []int{12, 0}
}

func (x *NextNetworkMappingReply_Data) GetPublicIp() string {
	if x != nil {
		return x.PublicIp
	}
	return ""
}

func (x *NextNetworkMappingReply_Data) GetPublicPort() int32 {
	if x != nil {
		return x.PublicPort
	}
	return 0
}

var File_api_network_mapping_v1_network_mapping_proto protoreflect.FileDescriptor

var file_api_network_mapping_v1_network_mapping_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x61, 0x70, 0x69,
	0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x22, 0xa3,
	0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x56, 0x4f, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x22, 0xa3, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x56, 0x4f,
	0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x22, 0x2d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x49, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x58, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x56, 0x4f, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x43, 0x0a, 0x19, 0x50, 0x61, 0x67,
	0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xa4,
	0x02, 0x0a, 0x17, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x89, 0x01, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x43, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x56,
	0x4f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xa2, 0x03, 0x0a, 0x10, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x56, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69,
	0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x49, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x48, 0x0a, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x56,
	0x4f, 0x52, 0x07, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x3c, 0x0a, 0x19, 0x4e, 0x65,
	0x78, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0xde, 0x01, 0x0a, 0x17, 0x4e, 0x65, 0x78,
	0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x4f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x65, 0x78, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x44, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x32, 0xa8, 0x08, 0x0a, 0x0e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0xad, 0x01, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2d, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0xa9, 0x01, 0x0a,
	0x12, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x12, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x6d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0xa9, 0x01, 0x0a, 0x12, 0x4e, 0x65, 0x78,
	0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x65, 0x78, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2f,
	0x6e, 0x65, 0x78, 0x74, 0x12, 0xa6, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2d,
	0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xaf, 0x01,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2d, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0xb2, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x1a, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x42, 0x5f, 0x0a, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x50, 0x01,
	0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x6f, 0x68,
	0x61, 0x69, 0x6a, 0x69, 0x61, 0x6e, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_network_mapping_v1_network_mapping_proto_rawDescOnce sync.Once
	file_api_network_mapping_v1_network_mapping_proto_rawDescData = file_api_network_mapping_v1_network_mapping_proto_rawDesc
)

func file_api_network_mapping_v1_network_mapping_proto_rawDescGZIP() []byte {
	file_api_network_mapping_v1_network_mapping_proto_rawDescOnce.Do(func() {
		file_api_network_mapping_v1_network_mapping_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_network_mapping_v1_network_mapping_proto_rawDescData)
	})
	return file_api_network_mapping_v1_network_mapping_proto_rawDescData
}

var file_api_network_mapping_v1_network_mapping_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_network_mapping_v1_network_mapping_proto_goTypes = []interface{}{
	(*CreateNetworkMappingRequest)(nil),  // 0: api.server.network_mapping.v1.CreateNetworkMappingRequest
	(*CreateNetworkMappingReply)(nil),    // 1: api.server.network_mapping.v1.CreateNetworkMappingReply
	(*UpdateNetworkMappingRequest)(nil),  // 2: api.server.network_mapping.v1.UpdateNetworkMappingRequest
	(*UpdateNetworkMappingReply)(nil),    // 3: api.server.network_mapping.v1.UpdateNetworkMappingReply
	(*DeleteNetworkMappingRequest)(nil),  // 4: api.server.network_mapping.v1.DeleteNetworkMappingRequest
	(*DeleteNetworkMappingReply)(nil),    // 5: api.server.network_mapping.v1.DeleteNetworkMappingReply
	(*GetNetworkMappingRequest)(nil),     // 6: api.server.network_mapping.v1.GetNetworkMappingRequest
	(*GetNetworkMappingReply)(nil),       // 7: api.server.network_mapping.v1.GetNetworkMappingReply
	(*PageNetworkMappingRequest)(nil),    // 8: api.server.network_mapping.v1.PageNetworkMappingRequest
	(*PageNetworkMappingReply)(nil),      // 9: api.server.network_mapping.v1.PageNetworkMappingReply
	(*NetworkMappingVO)(nil),             // 10: api.server.network_mapping.v1.NetworkMappingVO
	(*NextNetworkMappingRequest)(nil),    // 11: api.server.network_mapping.v1.NextNetworkMappingRequest
	(*NextNetworkMappingReply)(nil),      // 12: api.server.network_mapping.v1.NextNetworkMappingReply
	(*PageNetworkMappingReply_Data)(nil), // 13: api.server.network_mapping.v1.PageNetworkMappingReply.Data
	(*NextNetworkMappingReply_Data)(nil), // 14: api.server.network_mapping.v1.NextNetworkMappingReply.Data
	(*DomainBindingVO)(nil),              // 15: api.server.network_mapping.v1.DomainBindingVO
}
var file_api_network_mapping_v1_network_mapping_proto_depIdxs = []int32{
	10, // 0: api.server.network_mapping.v1.CreateNetworkMappingReply.network_mapping:type_name -> api.server.network_mapping.v1.NetworkMappingVO
	10, // 1: api.server.network_mapping.v1.UpdateNetworkMappingReply.network_mapping:type_name -> api.server.network_mapping.v1.NetworkMappingVO
	10, // 2: api.server.network_mapping.v1.GetNetworkMappingReply.network_mapping:type_name -> api.server.network_mapping.v1.NetworkMappingVO
	13, // 3: api.server.network_mapping.v1.PageNetworkMappingReply.data:type_name -> api.server.network_mapping.v1.PageNetworkMappingReply.Data
	15, // 4: api.server.network_mapping.v1.NetworkMappingVO.domains:type_name -> api.server.network_mapping.v1.DomainBindingVO
	14, // 5: api.server.network_mapping.v1.NextNetworkMappingReply.data:type_name -> api.server.network_mapping.v1.NextNetworkMappingReply.Data
	10, // 6: api.server.network_mapping.v1.PageNetworkMappingReply.Data.list:type_name -> api.server.network_mapping.v1.NetworkMappingVO
	0,  // 7: api.server.network_mapping.v1.NetworkMapping.CreateNetworkMapping:input_type -> api.server.network_mapping.v1.CreateNetworkMappingRequest
	8,  // 8: api.server.network_mapping.v1.NetworkMapping.PageNetworkMapping:input_type -> api.server.network_mapping.v1.PageNetworkMappingRequest
	11, // 9: api.server.network_mapping.v1.NetworkMapping.NextNetworkMapping:input_type -> api.server.network_mapping.v1.NextNetworkMappingRequest
	6,  // 10: api.server.network_mapping.v1.NetworkMapping.GetNetworkMapping:input_type -> api.server.network_mapping.v1.GetNetworkMappingRequest
	4,  // 11: api.server.network_mapping.v1.NetworkMapping.DeleteNetworkMapping:input_type -> api.server.network_mapping.v1.DeleteNetworkMappingRequest
	2,  // 12: api.server.network_mapping.v1.NetworkMapping.UpdateNetworkMapping:input_type -> api.server.network_mapping.v1.UpdateNetworkMappingRequest
	1,  // 13: api.server.network_mapping.v1.NetworkMapping.CreateNetworkMapping:output_type -> api.server.network_mapping.v1.CreateNetworkMappingReply
	9,  // 14: api.server.network_mapping.v1.NetworkMapping.PageNetworkMapping:output_type -> api.server.network_mapping.v1.PageNetworkMappingReply
	12, // 15: api.server.network_mapping.v1.NetworkMapping.NextNetworkMapping:output_type -> api.server.network_mapping.v1.NextNetworkMappingReply
	7,  // 16: api.server.network_mapping.v1.NetworkMapping.GetNetworkMapping:output_type -> api.server.network_mapping.v1.GetNetworkMappingReply
	5,  // 17: api.server.network_mapping.v1.NetworkMapping.DeleteNetworkMapping:output_type -> api.server.network_mapping.v1.DeleteNetworkMappingReply
	3,  // 18: api.server.network_mapping.v1.NetworkMapping.UpdateNetworkMapping:output_type -> api.server.network_mapping.v1.UpdateNetworkMappingReply
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_network_mapping_v1_network_mapping_proto_init() }
func file_api_network_mapping_v1_network_mapping_proto_init() {
	if File_api_network_mapping_v1_network_mapping_proto != nil {
		return
	}
	file_api_network_mapping_v1_domain_binding_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNetworkMappingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNetworkMappingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNetworkMappingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNetworkMappingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNetworkMappingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNetworkMappingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNetworkMappingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNetworkMappingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageNetworkMappingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageNetworkMappingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkMappingVO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextNetworkMappingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextNetworkMappingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageNetworkMappingReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_network_mapping_v1_network_mapping_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextNetworkMappingReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_network_mapping_v1_network_mapping_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_network_mapping_v1_network_mapping_proto_goTypes,
		DependencyIndexes: file_api_network_mapping_v1_network_mapping_proto_depIdxs,
		MessageInfos:      file_api_network_mapping_v1_network_mapping_proto_msgTypes,
	}.Build()
	File_api_network_mapping_v1_network_mapping_proto = out.File
	file_api_network_mapping_v1_network_mapping_proto_rawDesc = nil
	file_api_network_mapping_v1_network_mapping_proto_goTypes = nil
	file_api_network_mapping_v1_network_mapping_proto_depIdxs = nil
}
